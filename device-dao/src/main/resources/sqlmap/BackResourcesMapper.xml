<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.device.dao.BackResourcesMapper">
    <resultMap id="BaseResultMap" type="com.device.api.entity.backrole.BackResources">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="parent_id" property="parentId" jdbcType="BIGINT"/>
        <result column="res_key" property="resKey" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="res_url" property="resUrl" jdbcType="VARCHAR"/>
        <result column="level" property="level" jdbcType="INTEGER"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="is_hide" property="isHide" jdbcType="BIT"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, parent_id, res_key, type, res_url, level, icon, is_hide, description
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from back_resources
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from back_resources
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.device.api.entity.backrole.BackResources">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into back_resources (name, parent_id, res_key,
        type, res_url, level,
        icon, is_hide, description
        )
        values (#{name,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, #{resKey,jdbcType=VARCHAR},
        #{type,jdbcType=TINYINT}, #{resUrl,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER},
        #{icon,jdbcType=VARCHAR}, #{isHide,jdbcType=BIT}, #{description,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.device.api.entity.backrole.BackResources">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into back_resources
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="resKey != null">
                res_key,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="resUrl != null">
                res_url,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="isHide != null">
                is_hide,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="resKey != null">
                #{resKey,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="resUrl != null">
                #{resUrl,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                #{level,jdbcType=INTEGER},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="isHide != null">
                #{isHide,jdbcType=BIT},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.device.api.entity.backrole.BackResources">
        update back_resources
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="resKey != null">
                res_key = #{resKey,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="resUrl != null">
                res_url = #{resUrl,jdbcType=VARCHAR},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=INTEGER},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="isHide != null">
                is_hide = #{isHide,jdbcType=BIT},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.device.api.entity.backrole.BackResources">
    update back_resources
    set name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      res_key = #{resKey,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      res_url = #{resUrl,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR},
      is_hide = #{isHide,jdbcType=BIT},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectList" resultType="com.device.api.entity.TreeObject">
        select
        <include refid="Base_Column_List"/>
        from back_resources
        where is_hide!=1
    </select>

    <!--用户权限-->
    <select id="selectUserList" resultType="com.device.api.entity.TreeObject">
        SELECT DISTINCT
            a.id,
            a.name,
            a.parent_id,
            a.res_key,
            a.type,
            a.res_url,
            a.level,
            a.icon,
            a.is_hide,
            a.description
        FROM back_resources a
            LEFT JOIN back_res_role b ON a.id = b.res_id
            LEFT JOIN back_user_role d ON b.role_id = d.role_id AND b.user_id=d.user_id
        WHERE d.user_id = #{userId} and is_hide!=1
        ORDER BY a.level ASC
    </select>


    <select id="selectPage" resultMap="BaseResultMap" parameterType="com.device.api.entity.Page">
        select
        <include refid="Base_Column_List"/>
        from back_resources
        <where>
            is_hide!=1
            <if test="filter.name != null and filter.name != ''">
                AND name = #{filter.name}
            </if>
            <if test="filter.id != null and filter.id != ''">
                AND id = #{filter.id}
            </if>
            <if test="filter.parentId != null and filter.parentId != ''">
                AND parent_id = #{filter.parentId}
            </if>
        </where>
        order by level ASC
    </select>
    <select id="selectMenu" resultType="com.device.api.entity.backrole.BackResources">
        select
        <include refid="Base_Column_List"/>
        from back_resources
        WHERE parent_id=#{parentId} and is_hide!=1
    </select>
    <select id="selectByName" resultType="com.device.api.entity.backrole.BackResources">
        select
        <include refid="Base_Column_List"/>
        from back_resources
        WHERE name = #{name}
    </select>

</mapper>