<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.device.dao.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.device.api.entity.device.UserInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="SMALLINT"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="SMALLINT"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="hotel" property="hotel" jdbcType="VARCHAR"/>
        <result column="dept" property="dept" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, account, password, status, real_name, mobile, email, sex, age, hotel, dept, address,
        remark, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user_info
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByPage" resultType="com.device.api.entity.device.UserInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user_info as u
        <where>
            <if test="filter.account!=null and filter.account!=''">
                and u.account = #{filter.account}
            </if>
            <if test="filter.realName!=null and filter.realName!=''">
                and u.real_name like concat('%',#{filter.realName},'%')
            </if>
        </where>
        ORDER BY u.create_time DESC
        limit #{offset}, #{limit}
    </select>
    <select id="selectCountByPage" resultType="java.lang.Long">
        SELECT count(*) FROM user_info as u
        <where>
            <if test="filter.account!=null and filter.account!=''">
                and u.account = #{filter.account}
            </if>
            <if test="filter.realName!=null and filter.realName!=''">
                and u.real_name like concat('%',#{filter.realName},'%')
            </if>
        </where>
        ORDER BY u.create_time DESC
    </select>
    <select id="selectByAccount" resultType="com.device.api.entity.device.UserInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user_info
        WHERE account = #{account}
    </select>
    <select id="selectByRealName" resultType="com.device.api.entity.device.UserInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user_info
        WHERE real_name = #{realName}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM user_info
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.device.api.entity.device.UserInfo">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user_info (account, password, status,
        real_name, mobile, email,
        sex, age, hotel, dept,
        address, remark, create_time,
        update_time)
        values (#{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT},
        #{realName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        #{sex,jdbcType=SMALLINT}, #{age,jdbcType=INTEGER}, #{hotel,jdbcType=VARCHAR}, #{dept,jdbcType=VARCHAR},
        #{address,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.device.api.entity.device.UserInfo">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="account != null">
                account,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="hotel != null">
                hotel,
            </if>
            <if test="dept != null">
                dept,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=SMALLINT},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=SMALLINT},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="hotel != null">
                #{hotel,jdbcType=VARCHAR},
            </if>
            <if test="dept != null">
                #{dept,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.device.api.entity.device.UserInfo">
        update user_info
        <set>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=SMALLINT},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=SMALLINT},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="hotel != null">
                hotel = #{hotel,jdbcType=VARCHAR},
            </if>
            <if test="dept != null">
                dept = #{dept,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.device.api.entity.device.UserInfo">
        UPDATE user_info
        SET account     = #{account,jdbcType=VARCHAR},
            password    = #{password,jdbcType=VARCHAR},
            status      = #{status,jdbcType=SMALLINT},
            real_name   = #{realName,jdbcType=VARCHAR},
            mobile      = #{mobile,jdbcType=VARCHAR},
            email       = #{email,jdbcType=VARCHAR},
            sex         = #{sex,jdbcType=SMALLINT},
            age         = #{age,jdbcType=INTEGER},
            hotel       = #{hotel,jdbcType=VARCHAR},
            dept        = #{dept,jdbcType=VARCHAR},
            address     = #{address,jdbcType=VARCHAR},
            remark      = #{remark,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
</mapper>